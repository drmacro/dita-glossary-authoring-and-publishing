<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference
  PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" class="- topic/topic       reference/reference " ditaarch:DITAArchVersion="1.2" id="lau1443437525908" xml:lang="en-us">
	<title class="- topic/title " id="TitleAArch64ProcessorFeatureRegister0_EL1">ID_AA64PFR0_EL1, AArch64
		Processor Feature Register 0, EL1</title>
	<shortdesc class="- topic/shortdesc ">The ID_AA64PFR0_EL1 provides additional information about implemented
		core features in AArch64.</shortdesc>
	<prolog class="- topic/prolog ">
		<permissions class="- topic/permissions " view="nonconfidential"/>
		
	</prolog>
	<refbody class="- topic/body        reference/refbody ">
		<section class="- topic/section ">
			<p class="- topic/p ">The optional Advanced SIMD and floating-point support is not
				included in the base product of the core. <keyword class="- topic/keyword ">Arm</keyword> requires licensees to have contractual
				rights to obtain the Advanced SIMD and floating-point support.</p>
			<title class="- topic/title ">Bit field descriptions</title>
			<p class="- topic/p ">ID_AA64PFR0_EL1 is a 64-bit register, and is part of the
				Identification registers functional group.</p>
			<p class="- topic/p ">This register is Read Only.</p>
			
			<fig class="- topic/fig ">
				<title class="- topic/title ">ID_AA64PFR0_EL1 bit assignments</title>
				<image class="- topic/image " href="gke1516889384140.svg" placement="inline">
					<alt class="- topic/alt ">ID_AA64PFR0_EL1 bit assignments</alt>
				</image>		
			</fig>			
			
			<dl class="- topic/dl ">
				
				<dlentry class="- topic/dlentry ">
					<dt class="- topic/dt ">CSV3, [63:60]</dt>
					<dd class="- topic/dd ">
						<dl class="- topic/dl " compact="yes" outputclass="termwidthpc8">
							<dlentry class="- topic/dlentry ">
								<dt class="- topic/dt "><codeph class="+ topic/ph pr-d/codeph "><ph class="- topic/ph " otherprops="g.number.hex">1</ph></codeph></dt>
								<dd class="- topic/dd ">Data loaded under speculation with a permission or domain fault cannot be used to form an address or generate condition codes to be used by instructions newer than the load in the speculative sequence. This is the reset value.</dd>
							</dlentry>
						</dl>
					</dd>
					<dd class="- topic/dd ">All other values reserved.</dd>
				</dlentry>
				
				
				<dlentry class="- topic/dlentry ">
					<dt class="- topic/dt ">CSV2, [59:56]</dt>
					<dd class="- topic/dd ">
						<dl class="- topic/dl " compact="yes" outputclass="termwidthpc8">
							<dlentry class="- topic/dlentry ">
								<dt class="- topic/dt "><codeph class="+ topic/ph pr-d/codeph "><ph class="- topic/ph " otherprops="g.number.hex">1</ph></codeph></dt>
								<dd class="- topic/dd ">Branch targets trained in one context cannot affect speculative execution in a different hardware described context. This is the reset value.</dd>
							</dlentry>
						</dl>
					</dd>
					<dd class="- topic/dd ">All other values reserved.</dd>
				</dlentry>
				
				<dlentry class="- topic/dlentry ">
					<dt class="- topic/dt ">RES0, [55:32]</dt>
					<dd class="- topic/dd ">
						<dl class="- topic/dl " compact="yes" outputclass="termwidthpc8">
							<dlentry class="- topic/dlentry ">
								<dt class="- topic/dt "><term class="- topic/term " outputclass="archterm">RES0</term></dt>
								<dd class="- topic/dd ">Reserved.</dd>
							</dlentry>
						</dl>
					</dd>
				</dlentry>
				
				
				<dlentry class="- topic/dlentry ">
					<dt class="- topic/dt ">RAS, [31:28]</dt>
					<dd class="- topic/dd ">
						<p class="- topic/p ">RAS extension version. The possible values are:</p>
						<dl class="- topic/dl " compact="yes" outputclass="termwidthpc8">
							<dlentry class="- topic/dlentry ">
								<dt class="- topic/dt "><codeph class="+ topic/ph pr-d/codeph "><ph class="- topic/ph " otherprops="g.number.hex">0</ph></codeph></dt>
								<dd class="- topic/dd ">RAS extension is not present. This is the value if the core implementation does not have ECC present. </dd>
							</dlentry>
							<dlentry class="- topic/dlentry ">
								<dt class="- topic/dt "><codeph class="+ topic/ph pr-d/codeph "><ph class="- topic/ph " otherprops="g.number.hex">1</ph></codeph></dt>
								<dd class="- topic/dd ">Version 1 of the RAS extension is present. This is the value if the core implementation has ECC present. </dd>
							</dlentry>
						</dl>
					</dd>
				</dlentry>
				
				
				
				
				
				<dlentry class="- topic/dlentry ">
					<dt class="- topic/dt ">GIC, [27:24]</dt>
					<dd class="- topic/dd "> <p class="- topic/p ">GIC CPU interface:</p> <dl class="- topic/dl " compact="yes" outputclass="termwidthpc8">
						<dlentry class="- topic/dlentry ">
							<dt class="- topic/dt "><codeph class="+ topic/ph pr-d/codeph "><ph class="- topic/ph " otherprops="g.number.hex">0</ph></codeph></dt>
							<dd class="- topic/dd ">GIC CPU interface is disabled, <ph class="- topic/ph " otherprops="g.signal.name">GICCDISABLE</ph>
									is HIGH, or not implemented.</dd>
						</dlentry>
						<dlentry class="- topic/dlentry ">
							<dt class="- topic/dt "><codeph class="+ topic/ph pr-d/codeph "><ph class="- topic/ph " otherprops="g.number.hex">1</ph></codeph></dt>
							<dd class="- topic/dd ">GIC CPU interface is implemented and enabled,
										<ph class="- topic/ph " otherprops="g.signal.name">GICCDISABLE</ph> is LOW.</dd>
						</dlentry>
						
						
						
						</dl> </dd>
				</dlentry>
				<dlentry class="- topic/dlentry ">
					<dt class="- topic/dt ">AdvSIMD, [23:20]</dt>
					<dd class="- topic/dd "> <p class="- topic/p ">Advanced SIMD. The possible values are:</p> <dl class="- topic/dl " compact="yes" outputclass="termwidthpc8">
						<dlentry class="- topic/dlentry ">
							<dt class="- topic/dt "><codeph class="+ topic/ph pr-d/codeph "><ph class="- topic/ph " otherprops="g.number.hex">1</ph></codeph></dt>
							<dd class="- topic/dd ">Advanced SIMD, including Half-precision support,
									is implemented. </dd>
						</dlentry>
						
						</dl>  </dd>
				</dlentry>
				<dlentry class="- topic/dlentry ">
					<dt class="- topic/dt ">FP, [19:16]</dt>
					<dd class="- topic/dd "> <p class="- topic/p ">Floating-point. The possible values are:</p> <dl class="- topic/dl " compact="yes" outputclass="termwidthpc8">
						<dlentry class="- topic/dlentry ">
							<dt class="- topic/dt "><codeph class="+ topic/ph pr-d/codeph "><ph class="- topic/ph " otherprops="g.number.hex">1</ph></codeph></dt>
							<dd class="- topic/dd ">Floating-point, including Half-precision
									support, is implemented. </dd>
						</dlentry>
						
						</dl>  </dd>
				</dlentry>
				<dlentry class="- topic/dlentry ">
					<dt class="- topic/dt ">EL3 handling, [15:12]</dt>
					<dd class="- topic/dd "> <p class="- topic/p ">EL3 exception handling:</p>  <dl class="- topic/dl " compact="yes" outputclass="termwidthpc8">
							<dlentry class="- topic/dlentry ">
								<dt class="- topic/dt "><codeph class="+ topic/ph pr-d/codeph "><ph class="- topic/ph " otherprops="g.number.hex">1</ph></codeph></dt>
								<dd class="- topic/dd ">Instructions can be executed at EL3 in AArch64 state only.</dd>
							</dlentry>
						</dl> </dd>
				</dlentry>
				<dlentry class="- topic/dlentry ">
					<dt class="- topic/dt ">EL2 handling, [11:8]</dt>
					<dd class="- topic/dd "> <p class="- topic/p ">EL2 exception handling:</p>  <dl class="- topic/dl " compact="yes" outputclass="termwidthpc8">
							<dlentry class="- topic/dlentry ">
								<dt class="- topic/dt "><codeph class="+ topic/ph pr-d/codeph "><ph class="- topic/ph " otherprops="g.number.hex">1</ph></codeph></dt>
								<dd class="- topic/dd ">Instructions can be executed at EL3 in AArch64 state only.</dd>
							</dlentry>
						</dl> </dd>
				</dlentry>
				<dlentry class="- topic/dlentry ">
					<dt class="- topic/dt ">EL1 handling, [7:4]</dt>
					<dd class="- topic/dd "> <p class="- topic/p ">EL1 exception handling. The possible values are:</p>  <dl class="- topic/dl " compact="yes" outputclass="termwidthpc8">
							<dlentry class="- topic/dlentry ">
								<dt class="- topic/dt "><codeph class="+ topic/ph pr-d/codeph "><ph class="- topic/ph " otherprops="g.number.hex">1</ph></codeph></dt>
								<dd class="- topic/dd ">Instructions can be executed at EL3 in AArch64 state only.</dd>
							</dlentry>
						</dl> </dd>
				</dlentry>
				<dlentry class="- topic/dlentry ">
					<dt class="- topic/dt ">EL0 handling, [3:0]</dt>
					<dd class="- topic/dd "> <p class="- topic/p ">EL0 exception handling. The possible values are:</p> <dl class="- topic/dl " compact="yes" outputclass="termwidthpc8">
							<dlentry class="- topic/dlentry ">
								<dt class="- topic/dt "><codeph class="+ topic/ph pr-d/codeph "><ph class="- topic/ph " otherprops="g.number.hex">2</ph></codeph></dt>
								<dd class="- topic/dd ">Instructions can be executed at EL0 in AArch64 or AArch32 state.</dd>
							</dlentry>
						</dl>  </dd>
				</dlentry>
			</dl>
			<dl class="- topic/dl ">
				<dlentry class="- topic/dlentry ">
					<dt class="- topic/dt ">Configurations</dt>
					<dd class="- topic/dd "> <p class="- topic/p ">ID_AA64PFR0_EL1 is architecturally mapped to External
							register EDPFR.</p> <p class="- topic/p ">Bit fields and details that are not provided in this
							description are architecturally defined. See the <cite class="- topic/cite "><ph class="- topic/ph ">
                            <keyword class="- topic/keyword "><tm class="- topic/tm " tmtype="reg">Arm</tm></keyword> Architecture Reference Manual <keyword class="- topic/keyword ">Arm</keyword>v8, for <keyword class="- topic/keyword ">Arm</keyword>v8-A architecture profile</ph></cite>.</p> </dd>
				</dlentry>
			</dl>
		</section>
		
	</refbody>
</reference>