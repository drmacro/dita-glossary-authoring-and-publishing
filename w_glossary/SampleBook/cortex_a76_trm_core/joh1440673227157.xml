<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference
  PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" class="- topic/topic       reference/reference " ditaarch:DITAArchVersion="1.2" id="joh1440673227157" xml:lang="en-us">
  <title class="- topic/title ">About debug methods</title>
  <shortdesc class="- topic/shortdesc ">The core is part of a debug system and supports both self-hosted
    and external debug. </shortdesc>
  <prolog class="- topic/prolog ">
    <permissions class="- topic/permissions " view="nonconfidential"/>
    
  </prolog>
  <refbody class="- topic/body        reference/refbody ">
    
    <section class="- topic/section ">
      <p class="- topic/p ">The following figure shows a typical external debug system.</p>
      <fig class="- topic/fig " id="fig_jkb_tsg_qr">
        <title class="- topic/title ">External debug system</title>
        <image class="- topic/image " href="joh1449593460962.svg" id="image_nlb_tsg_qr" placement="inline">
          <alt class="- topic/alt ">External debug system</alt>
        </image>
      </fig>
      <dl class="- topic/dl ">
        <dlentry class="- topic/dlentry ">
          <dt class="- topic/dt ">Debug host</dt>
          <dd class="- topic/dd ">A computer, for example a personal computer, that
            is running a software debugger such as the DS-5 Debugger. With the
            debug host, you can issue high-level commands, such as setting a
            breakpoint at a certain location or examining the contents of a
            memory address.</dd>
        </dlentry>
        <dlentry class="- topic/dlentry ">
          <dt class="- topic/dt ">Protocol converter</dt>
          <dd class="- topic/dd ">The debug host sends messages to the debug target
            using an interface such as Ethernet. However, the debug target
            typically implements a different interface protocol. A device such
            as DSTREAM is required to convert between the two protocols.</dd>
        </dlentry>
        <dlentry class="- topic/dlentry ">
          <dt class="- topic/dt ">Debug target</dt>
          <dd class="- topic/dd ">
            <p class="- topic/p ">The lowest level of the system implements system
              support for the protocol converter to access the debug unit using
              the <term class="- topic/term ">Advanced Peripheral Bus</term> (APB)
              slave interface. An example of a debug target is a development
              system with a test chip or a silicon part with a core.</p>
          </dd>
        </dlentry>
        <dlentry class="- topic/dlentry ">
          <dt class="- topic/dt ">Debug unit</dt>
          <dd class="- topic/dd ">
            <p class="- topic/p ">Helps debugging software that is running on the
              core:</p>
            <ul class="- topic/ul " id="ul_xlb_tsg_qr">
              <li class="- topic/li ">Hardware systems that are based on the
                core.</li>
              <li class="- topic/li ">Operating systems.</li>
              <li class="- topic/li ">Application software.</li>
            </ul>
            <p class="- topic/p ">With the debug unit, you can:</p>
            <ul class="- topic/ul " id="ul_hmb_tsg_qr">
              <li class="- topic/li ">Stop program execution.</li>
              <li class="- topic/li ">Examine and alter process and coprocessor
                state.</li>
              <li class="- topic/li ">Examine and alter memory and
                the
                state of the input or output peripherals.</li>
              <li class="- topic/li ">Restart the core.</li>
            </ul>
          </dd>
        </dlentry>
      </dl>
    </section>
    
    <section class="- topic/section "><p class="- topic/p ">For self-hosted debug, the debug target runs additional debug monitor software
      that runs on the <ph class="- topic/ph "><keyword class="- topic/keyword "><tm class="- topic/tm " tmtype="reg">Cortex</tm></keyword><keyword class="- topic/keyword ">â€‘A76</keyword></ph> 
      core itself. This way, it does not require expensive interface hardware to connect a
      second host computer.</p>
      
    </section>
  </refbody>
</reference>