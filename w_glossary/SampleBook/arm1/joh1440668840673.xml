<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference
  PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" class="- topic/topic       reference/reference " ditaarch:DITAArchVersion="1.2" id="joh1440668840673" xml:lang="en-us">
  <title class="- topic/title ">Reliability, Availability, and Serviceability (RAS)</title>
  <shortdesc class="- topic/shortdesc ">This chapter describes the RAS features implemented in the <ph class="- topic/ph "><keyword class="- topic/keyword "><tm class="- topic/tm " tmtype="reg">Cortex</tm></keyword><keyword class="- topic/keyword ">‑A76</keyword></ph> core.</shortdesc>
  <prolog class="- topic/prolog ">
    <permissions class="- topic/permissions " view="nonconfidential"/>
    
  </prolog>
  <refbody class="- topic/body        reference/refbody ">
    <section class="- topic/section "/>
  </refbody>
<related-links class="- topic/related-links "><linkpool class="- topic/linkpool " mapkeyref="kqb1476970875925"><linkpool class="- topic/linkpool "><link class="- topic/link " format="dita" href="joh1442828422258.xml" role="child" scope="local" type="reference"><linktext class="- topic/linktext ">Cache ECC and parity</linktext><desc class="- topic/desc ">The <ph class="- topic/ph "><keyword class="- topic/keyword "><tm class="- topic/tm " tmtype="reg">Cortex</tm></keyword><keyword class="- topic/keyword ">‑A76</keyword></ph> 		core implements the RAS extension to the <ph class="- topic/ph "><keyword class="- topic/keyword "><tm class="- topic/tm " tmtype="reg">Arm</tm>v8‑A</keyword></ph> architecture which provides mechanisms for standardized reporting of 		the errors generated by cache protection mechanisms.</desc></link><link class="- topic/link " format="dita" href="alj1479748603888.xml" role="child" scope="local" type="reference"><linktext class="- topic/linktext ">Cache protection behavior</linktext><desc class="- topic/desc ">The configuration of the RAS extension that is implemented in the <ph class="- topic/ph "><keyword class="- topic/keyword "><tm class="- topic/tm " tmtype="reg">Cortex</tm></keyword><keyword class="- topic/keyword ">‑A76</keyword></ph> core includes cache     protection. </desc></link><link class="- topic/link " format="dita" href="lau1466521034447.xml" role="child" scope="local" type="reference"><linktext class="- topic/linktext ">Uncorrected errors and data poisoning</linktext><desc class="- topic/desc ">When an error is detected, the correction mechanism is triggered. 		However, if the error is a 2-bit error in a RAM protected by ECC, then the error is not 		correctable.</desc></link><link class="- topic/link " format="dita" href="lau1464251143810.xml" role="child" scope="local" type="reference"><linktext class="- topic/linktext ">RAS error types</linktext><desc class="- topic/desc ">This section describes the RAS error types that are introduced by the RAS 		extension and supported in the <ph class="- topic/ph "><keyword class="- topic/keyword "><tm class="- topic/tm " tmtype="reg">Cortex</tm></keyword><keyword class="- topic/keyword ">‑A76</keyword></ph> core.</desc></link><link class="- topic/link " format="dita" href="lkw1477914079778.xml" role="child" scope="local" type="reference"><linktext class="- topic/linktext ">Error Synchronization Barrier</linktext><desc class="- topic/desc ">The <term class="- topic/term ">Error Synchronization Barrier</term> (<codeph class="+ topic/ph pr-d/codeph ">ESB</codeph>) instruction synchronizes unrecoverable system 		errors.</desc></link><link class="- topic/link " format="dita" href="mqq1507843200924.xml" role="child" scope="local" type="reference"><linktext class="- topic/linktext ">Enyo Error recording</linktext><desc class="- topic/desc ">The component that detects an error is called a node. The <ph class="- topic/ph "><keyword class="- topic/keyword "><tm class="- topic/tm " tmtype="reg">Cortex</tm></keyword><keyword class="- topic/keyword ">‑A76</keyword></ph> core is a node that interacts     with the <ph class="- topic/ph "><keyword class="- topic/keyword "><tm class="- topic/tm " tmtype="tm">DynamIQ</tm>                                     Shared Unit</keyword></ph> node. There is     one record per node for the errors detected.</desc></link><link class="- topic/link " format="dita" href="zgb1477919356258.xml" role="child" scope="local" type="reference"><linktext class="- topic/linktext ">Error injection</linktext><desc class="- topic/desc ">To support testing of error handling software, the <ph class="- topic/ph "><keyword class="- topic/keyword "><tm class="- topic/tm " tmtype="reg">Cortex</tm></keyword><keyword class="- topic/keyword ">‑A76</keyword></ph> core can inject errors in     the error detection logic.</desc></link></linkpool></linkpool></related-links></reference>