<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference
  PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" class="- topic/topic       reference/reference " ditaarch:DITAArchVersion="1.2" id="joh1440666282384" xml:lang="en-us">
  <title class="- topic/title ">Memory Management Unit</title>
  <shortdesc class="- topic/shortdesc ">This chapter describes the <term class="- topic/term ">Memory Management
      Unit</term> (MMU) of the <ph class="- topic/ph "><keyword class="- topic/keyword "><tm class="- topic/tm " tmtype="reg">Cortex</tm></keyword><keyword class="- topic/keyword ">‑A76</keyword></ph>
    core.</shortdesc>
  
  <prolog class="- topic/prolog ">
    <permissions class="- topic/permissions " view="nonconfidential"/>
    
    
  </prolog>
  <refbody class="- topic/body        reference/refbody ">
    <section class="- topic/section "/>
  </refbody>
<related-links class="- topic/related-links "><linkpool class="- topic/linkpool " mapkeyref="kqb1476970875925"><linkpool class="- topic/linkpool "><link class="- topic/link " format="dita" href="ste1440492642242.xml" role="child" scope="local" type="concept"><linktext class="- topic/linktext ">About the MMU</linktext><desc class="- topic/desc ">The <term class="- topic/term ">Memory Management Unit</term> (MMU) is     responsible for translating addresses of code and data <term class="- topic/term ">Virtual       Addresses</term> (VA) to <term class="- topic/term ">Physical Addresses</term> (PAs) in the real     system. The MMU also controls memory access permissions, memory ordering, and cache policies for     each region of memory.</desc></link><link class="- topic/link " format="dita" href="etz1477585331163.xml" role="child" scope="local" type="reference"><linktext class="- topic/linktext ">TLB organization</linktext><desc class="- topic/desc ">The TLB is a cache of recently executed page translations within the MMU. 		The <ph class="- topic/ph "><keyword class="- topic/keyword "><tm class="- topic/tm " tmtype="reg">Cortex</tm></keyword><keyword class="- topic/keyword ">‑A76</keyword></ph> core 		implements a two-level TLB structure. The TLB stores all page sizes and is responsible for 		breaking these down in to smaller pages when required for the data or instruction L1 		TLB.</desc></link><link class="- topic/link " format="dita" href="siy1480519308825.xml" role="child" scope="local" type="reference"><linktext class="- topic/linktext ">TLB match process</linktext><desc class="- topic/desc ">The Armv8-A architecture provides support for multiple maps from the VA     space that are translated differently. </desc></link><link class="- topic/link " format="dita" href="lvk1477657616206.xml" role="child" scope="local" type="reference"><linktext class="- topic/linktext ">Ares Translation table walks</linktext><desc class="- topic/desc ">When the <ph class="- topic/ph "><keyword class="- topic/keyword "><tm class="- topic/tm " tmtype="reg">Cortex</tm></keyword><keyword class="- topic/keyword ">‑A76</keyword></ph> core generates a memory access, the MMU:</desc></link><link class="- topic/link " format="dita" href="coj1473337690216.xml" role="child" scope="local" type="concept"><linktext class="- topic/linktext ">MMU memory accesses</linktext><desc class="- topic/desc ">During a translation table walk, the MMU generates accesses. This     section describes the specific behaviors of the core for MMU memory accesses.</desc></link><link class="- topic/link " format="dita" href="lau1465225243151.xml" role="child" scope="local" type="reference"><linktext class="- topic/linktext ">Specific behaviors on aborts and memory attributes</linktext><desc class="- topic/desc ">This section describes specific behaviors caused by aborts and also 		describes memory attributes.</desc></link><link class="- topic/link " format="dita" href="smf1554201061027.xml" role="child" scope="local" type="concept"><linktext class="- topic/linktext ">Page Based Hardware Attributes</linktext><desc class="- topic/desc "><term class="- topic/term ">Page Based Hardware Attributes</term> (PBHA) is an optional, implementation defined feature.</desc></link></linkpool></linkpool></related-links></reference>