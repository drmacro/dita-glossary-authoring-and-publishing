<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" class="- topic/topic concept/concept " ditaarch:DITAArchVersion="1.2" id="geo1442308323059" xml:lang="en-us">
        
        <title class="- topic/title ">Design tasks</title>
        <shortdesc class="- topic/shortdesc ">The <ph class="- topic/ph "><keyword class="- topic/keyword "><tm class="- topic/tm " tmtype="reg">Cortex</tm></keyword><keyword class="- topic/keyword ">‑A76</keyword></ph> core is delivered as a synthesizable <term class="- topic/term ">Register Transfer Level</term> (RTL) description in Verilog HDL. Before you
                can use the <ph class="- topic/ph "><keyword class="- topic/keyword "><tm class="- topic/tm " tmtype="reg">Cortex</tm></keyword><keyword class="- topic/keyword ">‑A76</keyword></ph> core,
                you must implement it, integrate it, and program it.</shortdesc>
        <prolog class="- topic/prolog ">
                <permissions class="- topic/permissions " view="nonconfidential"/>
                </prolog>
        <conbody class="- topic/body  concept/conbody ">
                <p class="- topic/p ">A different party can perform each of the following tasks. Each
                        task can include implementation and integration choices that affect the
                        behavior and features of the <term keyref="core">core</term>.</p>
                <dl class="- topic/dl ">
                        <dlentry class="- topic/dlentry ">
                                <dt class="- topic/dt ">Implementation</dt>
                                <dd class="- topic/dd ">The implementer configures and synthesizes the
                                        RTL to produce a hard macrocell. This task includes
                                        integrating RAMs into the design.</dd>
                        </dlentry>
                        <dlentry class="- topic/dlentry ">
                                <dt class="- topic/dt ">Integration</dt>
                                <dd class="- topic/dd ">The integrator connects the macrocell into a
                                        SoC. This task includes connecting it to a memory system and
                                        peripherals.</dd>
                        </dlentry>
                        <dlentry class="- topic/dlentry ">
                                <dt class="- topic/dt ">Programming</dt>
                                <dd class="- topic/dd ">In the final task, the system programmer
                                        develops the software to configure and initialize the
                                         and tests the application software.</dd>
                        </dlentry>
                </dl>
                <p class="- topic/p ">The operation of the final <term keyref="device">device</term> depends on the following:</p>
                <dl class="- topic/dl ">
                        <dlentry class="- topic/dlentry ">
                                <dt class="- topic/dt ">Build configuration</dt>
                                <dd class="- topic/dd ">The implementer chooses the options that affect
                                        how the RTL source files are pre-processed. These options
                                        usually include or exclude logic that affects one or more of
                                        the area, maximum frequency, and features of the resulting
                                        macrocell.</dd>
                        </dlentry>
                        <dlentry class="- topic/dlentry ">
                                <dt class="- topic/dt ">Configuration inputs</dt>
                                <dd class="- topic/dd ">The integrator configures some features of the
                                         by tying inputs to specific values. These
                                        configuration settings affect the start-up behavior before
                                        any software configuration is made. They can also limit the
                                        options available to the software.</dd>
                        </dlentry>
                        <dlentry class="- topic/dlentry ">
                                <dt class="- topic/dt ">Software configuration</dt>
                                <dd class="- topic/dd ">The programmer configures the  by
                                        programming particular values into registers. The
                                        configuration choices affect the behavior of the
                                        .</dd>
                        </dlentry>
                </dl>
        </conbody>
</concept>
