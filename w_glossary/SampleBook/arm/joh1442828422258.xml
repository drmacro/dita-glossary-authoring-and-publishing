<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" class="- topic/topic       reference/reference " ditaarch:DITAArchVersion="1.2" id="joh1442828422258" xml:lang="en-us">
	
	<title class="- topic/title ">Cache ECC and parity</title>
	<shortdesc class="- topic/shortdesc ">The <ph class="- topic/ph "><keyword class="- topic/keyword "><tm class="- topic/tm " tmtype="reg">Cortex</tm></keyword><keyword class="- topic/keyword ">‑A76</keyword></ph>
		core implements the RAS extension to the <ph class="- topic/ph "><keyword class="- topic/keyword "><tm class="- topic/tm " tmtype="reg">Arm</tm>v8‑A</keyword></ph> architecture which provides mechanisms for standardized reporting of
		the errors generated by cache protection mechanisms.</shortdesc>
	<prolog class="- topic/prolog ">
		<permissions class="- topic/permissions " view="nonconfidential"/>
		
		
	</prolog>
	<refbody class="- topic/body        reference/refbody ">
		<section class="- topic/section ">
			<p class="- topic/p ">When configured with <term keyref="core">core</term> cache protection, the <ph class="- topic/ph "><keyword class="- topic/keyword "><tm class="- topic/tm " tmtype="reg">Cortex</tm></keyword><keyword class="- topic/keyword ">‑A76</keyword></ph>  can detect and correct a 1-bit error in any RAM and detect 2-bit errors in some RAMs.</p>
			
			
			<note class="- topic/note ">For information about SCU-L3 cache protection, see the <cite class="- topic/cite "><ph class="- topic/ph ">
                            <keyword class="- topic/keyword "><tm class="- topic/tm " tmtype="reg">Arm</tm></keyword> <ph class="- topic/ph "><keyword class="- topic/keyword "><tm class="- topic/tm " tmtype="tm">DynamIQ</tm>
                                    Shared Unit</keyword></ph> Technical Reference Manual</ph></cite>.</note>
			<p class="- topic/p "> The RAS extension improves the system by reducing unplanned outages:</p>
			<ul class="- topic/ul ">
				<li class="- topic/li ">Transient errors can be detected and corrected before they cause application
					or system failure.</li>
				<li class="- topic/li ">Failing components can be identified and replaced.</li>
				<li class="- topic/li ">Failure can be predicted ahead of time to allow replacement during planned
					maintenance.</li>
			</ul>
			
			
			<p class="- topic/p ">Errors that are present but not detected are known as latent or undetected errors. A transaction carrying a latent error is corrupted. In a system with no error detection, all errors are latent errors and are silently propagated by components until either:</p>
			<ul class="- topic/ul ">
				<li class="- topic/li ">They are masked and do not affect the outcome of the system. These are benign or false errors.</li>
				<li class="- topic/li ">They affect the service interface of the system and cause failure. These are silent data corruptions.</li>
			</ul>
			<p class="- topic/p ">The severity of a failure can range from minor to catastrophic. In many
				systems, data or service loss is regarded as more of a minor failure than data
				corruption, as long as backup data is available.</p>
			
			<p class="- topic/p ">The RAS extension focuses on errors that are produced from hardware <term keyref="fault">fault</term>s,
				which fall into two main categories:</p>
			<ul class="- topic/ul ">
				<li class="- topic/li ">Transient s.</li>
				<li class="- topic/li ">Persistent s.</li>
			</ul>
			
			<p class="- topic/p ">The RAS extension describes data corruption s, which mostly occur in
				memories and on data links. RAS concepts can also be used for the management of
				other types of physical s found in systems, such as lock-step errors, thermal
				trip, and mechanical failure. The RAS extension provides a common programmers model
				and mechanisms for  handling and error recovery.</p>
		</section>
	</refbody>
</reference>
